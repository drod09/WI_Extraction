import os
import shutil
import pandas as pd
from datetime import datetime

# === USER SETTINGS ===
excel_path = r"C:\Users\U309011\Desktop\WorkInstructions.xlsx"
source_folder = r"\\netapp\sharedfiles\Document Control\Work Instructions"  # <-- change to your source
destination_folder = r"C:\Users\U309011\Desktop\CurrentFolders"
log_path = os.path.join(os.path.expanduser("~"), "Desktop", "Copy_Log.xlsx")

# === STEP 1: Read Excel file ===
df = pd.read_excel(excel_path)

# Ensure the 'Number' column exists
if "Number" not in df.columns:
    raise ValueError("The Excel file must contain a column named 'Number'.")

# === STEP 2: Get list of folder numbers ===
folder_numbers = df["Number"].dropna().astype(str).str.zfill(4).tolist()

# === STEP 3: Prepare destination folder ===
os.makedirs(destination_folder, exist_ok=True)

# === STEP 4: Copy folders and track results ===
log_entries = []

for num in folder_numbers:
    src_path = os.path.join(source_folder, num)
    dest_path = os.path.join(destination_folder, num)

    entry = {"Folder Number": num, "Status": "", "Timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S")}

    if os.path.exists(src_path):
        try:
            shutil.copytree(src_path, dest_path)
            entry["Status"] = "Copied"
            print(f"Copied folder: {num}")
        except FileExistsError:
            entry["Status"] = "Skipped (Already Exists)"
            print(f"Skipped {num} (already exists)")
        except Exception as e:
            entry["Status"] = f"Error: {e}"
            print(f"Error copying {num}: {e}")
    else:
        entry["Status"] = "Missing (Source Not Found)"
        print(f"Source folder not found: {num}")

    log_entries.append(entry)

# === STEP 5: Save results to Excel log ===
log_df = pd.DataFrame(log_entries)
log_df.to_excel(log_path, index=False)

print(f"\nâœ… Copy complete. Log saved to: {log_path}")